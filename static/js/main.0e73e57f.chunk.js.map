{"version":3,"sources":["components/NumberInput.js","components/NumberCollector.js","App.js","serviceWorker.js","index.js"],"names":["NumberInput","props","_this","Object","classCallCheck","this","_super","call","handleInputChangeAgeA","event","value","target","isNumber","Number","isNaN","setState","ageA","errorsAgeA","number","handleInputChangeYearA","yearA","errorsYearA","handleInputChangeAgeB","ageB","errorsAgeB","handleInputChangeYearB","yearB","errorsYearB","handleAddNumber","preventDefault","isStateValid","onAdd","state","_this2","_this$state","_this$state2","_this$state3","_this$state4","valid","react_default","a","createElement","className","classes","root","onSubmit","e","noValidate","FormControl","InputLabel","htmlFor","Input","id","aria-label","onChange","Typography","color","Button","button","disabled","type","variant","React","Component","defaultProps","withStyles","theme","& > *","margin","spacing","display","NumberCollector","handleOnAdd","promise","fetch","concat","process","then","res","json","result","items","data","feedbackMsg","message","feedbackOpen","error","Promise","resolve","handleClearNumbers","Container","paper","component","row","components_NumberInput","IconButton","onClick","Delete_default","rightIcon","Table","list","TableHead","TableRow","TableCell","align","TableBody","yearKilledNumberA","yearKilledNumberB","avgYearKilledNumber","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","padding","flexDirection","alignItems","justifyContent","space","marginTop","column","components_NumberCollector","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e73e57f.chunk.js","sourcesContent":["import {\r\n  Input,\r\n  Typography,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  button: {\r\n    display: 'flex',\r\n  }\r\n});\r\n\r\nclass NumberInput extends React.Component {\r\n  static propTypes = {\r\n    onAdd: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    onAdd: () => {},\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ageA: '',\r\n      errorsAgeA: {\r\n        number: false,\r\n      },\r\n      yearA: '',\r\n      errorsYearA: {\r\n        number: false,\r\n      },\r\n      ageB: '',\r\n      errorsAgeB: {\r\n        number: false,\r\n      },\r\n      yearB: '',\r\n      errorsYearB: {\r\n        number: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @returns boolean\r\n   */\r\n  get isStateValid() {\r\n    if (this.state.ageA && !this.state.errorsAgeA.number &&\r\n      this.state.yearA && !this.state.errorsYearA.number &&\r\n      this.state.ageB && !this.state.errorsAgeB.number &&\r\n      this.state.yearB && !this.state.errorsYearB.number) {\r\n        return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Bound to the onChange of the number input\r\n   * @param {Event} event\r\n   */\r\n  handleInputChangeAgeA = (event) => {\r\n    const value = event.target.value;\r\n    const isNumber = !Number.isNaN(Number(value));\r\n\r\n    this.setState({\r\n      ageA: value,\r\n      errorsAgeA: {\r\n        number: !isNumber,\r\n      },\r\n    });\r\n  }\r\n  handleInputChangeYearA = (event) => {\r\n    const value = event.target.value;\r\n    const isNumber = !Number.isNaN(Number(value));\r\n\r\n    this.setState({\r\n      yearA: value,\r\n      errorsYearA: {\r\n        number: !isNumber,\r\n      },\r\n    });\r\n  }\r\n  handleInputChangeAgeB = (event) => {\r\n    const value = event.target.value;\r\n    const isNumber = !Number.isNaN(Number(value));\r\n\r\n    this.setState({\r\n      ageB: value,\r\n      errorsAgeB: {\r\n        number: !isNumber,\r\n      },\r\n    });\r\n  }\r\n  handleInputChangeYearB = (event) => {\r\n    const value = event.target.value;\r\n    const isNumber = !Number.isNaN(Number(value));\r\n\r\n    this.setState({\r\n      yearB: value,\r\n      errorsYearB: {\r\n        number: !isNumber,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Bound to the onClick of the button and onSubmit\r\n   * @param {*} event\r\n   */\r\n  handleAddNumber = (event) => {\r\n    event.preventDefault();\r\n    if (this.isStateValid) {\r\n      this.props.onAdd(\r\n        this.state.ageA,\r\n        this.state.yearA,\r\n        this.state.ageB,\r\n        this.state.yearB);\r\n      this.setState({ \r\n        ageA: '',\r\n        yearA: '',\r\n        ageB: '',\r\n        yearB: ''\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { ageA, errorsAgeA } = this.state;\r\n    const { yearA, errorsYearA } = this.state;\r\n    const { ageB, errorsAgeB } = this.state;\r\n    const { yearB, errorsYearB } = this.state;\r\n    const valid = this.isStateValid;\r\n    return (\r\n      <form className={this.props.classes.root} onSubmit={e => this.handleAddNumber(e)} noValidate>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"input-age-a\">Enter Age of Death A</InputLabel>\r\n          <Input\r\n            id=\"input-age-a\"\r\n            aria-label=\"Age of Death A\"\r\n            value={ageA}\r\n            onChange={e => this.handleInputChangeAgeA(e)}\r\n          />\r\n          {errorsAgeA && errorsAgeA.number && (\r\n            <Typography color=\"error\">Please enter a number</Typography>\r\n          )}\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"input-year-a\">Enter Year of Death A</InputLabel>\r\n          <Input\r\n            id=\"input-year-a\"\r\n            aria-label=\"Year of Death A\"\r\n            value={yearA}\r\n            onChange={e => this.handleInputChangeYearA(e)}\r\n          />\r\n          {errorsYearA && errorsYearA.number && (\r\n            <Typography color=\"error\">Please enter a number</Typography>\r\n          )}\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"input-age-b\">Enter Age of Death B</InputLabel>\r\n          <Input\r\n            id=\"input-age-b\"\r\n            aria-label=\"Age of Death B\"\r\n            value={ageB}\r\n            onChange={e => this.handleInputChangeAgeB(e)}\r\n          />\r\n          {errorsAgeB && errorsAgeB.number && (\r\n            <Typography color=\"error\">Please enter a number</Typography>\r\n          )}\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"input-year-b\">Enter Year of Death B</InputLabel>\r\n          <Input\r\n            id=\"input-year-b\"\r\n            aria-label=\"Year of Death B\"\r\n            value={yearB}\r\n            onChange={e => this.handleInputChangeYearB(e)}\r\n          />\r\n          {errorsYearB && errorsYearB.number && (\r\n            <Typography color=\"error\">Please enter a number</Typography>\r\n          )}\r\n        </FormControl>\r\n        <Button className={this.props.classes.button}\r\n          disabled={!valid}\r\n          type=\"submit\" \r\n          variant=\"contained\" \r\n          color=\"primary\">\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NumberInput);\r\n","import { Container, IconButton, Snackbar, Typography, withStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow } from '@material-ui/core';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport React, { Component } from 'react';\r\nimport NumberInput from './NumberInput';\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    padding: '1em',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  row: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around',\r\n  },\r\n  space: {\r\n    margin: '1em',\r\n  },\r\n  list: {\r\n    padding: '0',\r\n    margin: '1em',\r\n    marginTop: '5em',\r\n  }\r\n});\r\n\r\nclass NumberCollector extends Component {\r\n  static propTypes = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      feedbackMsg: '',\r\n      feedbackOpen: false,\r\n      items: [],\r\n      error: null\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {*} addedNumber\r\n   * @return {Promise<void>}\r\n   *\r\n   */\r\n  handleOnAdd = (ageA, yearA, ageB, yearB) => {\r\n    let promise = fetch(`${process.env.REACT_APP_BASE_URL}/api/avg-kill-by-witch?ageOfDeathA=${ageA}&yearOfDeathA=${yearA}&ageOfDeathB=${ageB}&yearOfDeathB=${yearB}`)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            items: result.data,\r\n            feedbackMsg: result.message,\r\n            feedbackOpen: true,\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            feedbackMsg: `Failed to retrieve data. ${error}`,\r\n            feedbackOpen: true,\r\n          });\r\n        }\r\n      )\r\n\r\n    this.setState({\r\n      items: this.items,\r\n      feedbackMsg: \"Request data on process...\",\r\n      feedbackOpen: true,\r\n    });\r\n\r\n    return promise || Promise.resolve();\r\n  }\r\n\r\n  handleClearNumbers = () => {\r\n    this.setState({ items: {} });\r\n    this.setState({\r\n      feedbackMsg: `Cleared the data...`,\r\n      feedbackOpen: true,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { items, feedbackMsg, feedbackOpen } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Container className={classes.paper}>\r\n        <Typography component=\"p\">\r\n          Enter data to find the solution\r\n        </Typography>\r\n\r\n        <div className={classes.row}>\r\n          <NumberInput onAdd={this.handleOnAdd} />\r\n          <IconButton\r\n            id=\"clearNumbersBtn\"\r\n            aria-label=\"clear data\"\r\n            onClick={e => this.handleClearNumbers(e)}\r\n          >\r\n            <Delete className={classes.rightIcon} />\r\n          </IconButton>\r\n        </div>\r\n        \r\n        <Table className={classes.list}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">Year Killed Person A</TableCell>\r\n              <TableCell align=\"center\">Year Killed Person B</TableCell>\r\n              <TableCell align=\"center\">Average Killed Number</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell align=\"center\">{items && items.yearKilledNumberA}</TableCell>\r\n              <TableCell align=\"center\">{items && items.yearKilledNumberB}</TableCell>\r\n              <TableCell align=\"center\">{items && items.avgYearKilledNumber}</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          open={feedbackOpen}\r\n          autoHideDuration={3000}\r\n          message={<Typography>{feedbackMsg}</Typography>}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NumberCollector);\r\n","import { withStyles } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nimport NumberCollector from './components/NumberCollector';\r\n\r\nconst styles = theme => ({\r\n  column: {\r\n    margin: '1em',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction App(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.column}>\r\n      <NumberCollector />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import './assets/css/index.css';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}